name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Changez cette branche selon vos besoins
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install flake8 pytest pytest-cov

      - name: Run linter
        run: flake8 .

      - name: Run tests
        run: pytest --cov=api tests/

  deploy:
    runs-on: ubuntu-latest
    needs: test  # Assurez-vous que le test passe avant de déployer
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install awscli -y

      - name: Configure AWS credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region us-west-2  # Changez en fonction de votre région

      - name: Deploy to EC2
        run: |
          # Exemple de commande pour se connecter à EC2 et redémarrer l'application
          ssh -o StrictHostKeyChecking=no -i path/to/your/key.pem ubuntu@your_ec2_public_ip << 'EOF'
          cd /path/to/your/app  # Chemin vers votre application sur l'instance EC2
          git pull origin main  # Met à jour le code
          # Redémarrez votre application (selon votre configuration, par exemple pour Uvicorn ou Streamlit)
          # sudo systemctl restart your-service-name
          exit
          EOF
